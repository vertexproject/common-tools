# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2.1

commands:

  do_test_execution:
    description: "Execute unit tests via pytest"
    steps:
      - run:
          name: run tests
          command: |
            . venv/bin/activate
             python3 -m pytest -v -s -rs --durations 6 --maxfail 6 -p no:logging ${COVERAGE_ARGS}

  test_steps_python:
    description: "Python test steps"
    steps:
      - checkout

      - restore_cache:
          keys:
            - v3-venv-{{ .Environment.CIRCLE_STAGE }}-{{ .Branch }}-{{ checksum "setup.py" }}

      - run:
          name: install requirements
          command: |
            python3 -m venv --copies venv
            . venv/bin/activate
            python -m pip install -U -r requirements.txt

      - save_cache:
          paths:
            - ./venv
          key: v3-venv-{{ .Environment.CIRCLE_STAGE }}-{{ .Branch }}-{{ checksum "setup.py" }}

      - run:
          name: syntax
          command: |
            . venv/bin/activate
            if [ -n "${RUN_SYNTAX}" ]; then pycodestyle --exclude venv; fi;

      - do_test_execution

  deploy_to_pypi:
    description: "Publish packages to pypi"
    steps:
      - checkout

      - restore_cache:
          keys:
            - v3-venv-{{ .Environment.CIRCLE_STAGE }}-{{ .Branch }}-{{ checksum "setup.py" }}

      - run:
          name: install python dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            python3 -m pip install -U wheel pip twine
            python3 -m pip install -U -r requirements.txt

      - save_cache:
          paths:
            - ./venv
          key: v3-venv-{{ .Environment.CIRCLE_STAGE }}-{{ .Branch }}-{{ checksum "setup.py" }}

      - run:
          name: verify git tag vs. version
          command: |
            env | grep -i circle
            . venv/bin/activate
            python setup.py verify

      - run:
          name: init .pypirc
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = $PYPI_USERNAME" >> ~/.pypirc
            echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc

      - run:
          name: create packages
          command: |
            . venv/bin/activate
            python setup.py sdist
            python setup.py bdist_wheel --python-tag=py37

      - run:
          name: smoke packages
          command: |
            mkdir -p /tmp/wheeltest
            mkdir -p /tmp/sdisttest
            python3 -m venv /tmp/wheeltest/venv
            python3 -m venv /tmp/sdisttest/venv
            cp dist/*.whl /tmp/wheeltest
            cp dist/*.tar.gz /tmp/sdisttest
            cd /tmp/wheeltest
            . ./venv/bin/activate
            python3 -m pip install -U wheel pip
            python3 -m pip install *.whl
            python3 -c "$PYPI_SMOKE_CODE"
            deactivate
            cd /tmp/sdisttest
            . ./venv/bin/activate
            python3 -m pip install -U wheel pip
            python3 -m pip install *.tar.gz
            python3 -c "$PYPI_SMOKE_CODE"
            deactivate

      - run:
          name: upload to pypi
          command: |
            . venv/bin/activate
            twine upload dist/*

  deploy_github_release:
    description: "Attempt to create a github release for the current tag with release notes."
    steps:
      - checkout
      - run:
          name: install libraries
          command: |
            python3 -m pip install -r requirements.txt
      - run:
          name: cut release
          command: |
            python3 -m vtx_common.tools.github_release

jobs:

  python37:
    parallelism: 1
    docker:
      - image: cimg/python:3.7
        environment:
          PYVERS: 3.7
          RUN_SYNTAX: 1
          COVERAGE_ARGS: --cov vtx_common --no-cov-on-fail

    working_directory: ~/repo

    steps:
      - test_steps_python

  deploy_pypi:
    docker:
      - image: cimg/python:3.7
        environment:
          PYPI_SMOKE_CODE: import vtx_common; print(vtx_common._verstring)

    steps:
      - deploy_to_pypi

  deploy_github_release:
    docker:
      - image: cimg/python:3.7
    steps:
      - deploy_github_release

workflows:
  version: 2
  run_tests:
    jobs:
      - python37:
          filters:
            tags:
              only: /.*/
            branches:
              only: /.*/

      - deploy_pypi:
          requires:
            - python37
          context: PublicPypiAccess
          filters:
            tags:
              only: /^v[0-9]\.[0-9]+\.[0-9]+((a|b|rc)[0-9]*)?$/
            branches:
              ignore: /.*/

      - deploy_github_release:
          requires:
            - python37
          context: GithubMachine
          filters:
            tags:
              only: /^v[0-9]\.[0-9]+\.[0-9]+((a|b|rc)[0-9]*)?$/
            branches:
              ignore: /.*/
